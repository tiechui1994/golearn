// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocal.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuctionType int32

const (
	AuctionType_FIRST_PRICE  AuctionType = 0
	AuctionType_SECOND_PRICE AuctionType = 1
	AuctionType_FIXED_PRICE  AuctionType = 2
)

var AuctionType_name = map[int32]string{
	0: "FIRST_PRICE",
	1: "SECOND_PRICE",
	2: "FIXED_PRICE",
}

var AuctionType_value = map[string]int32{
	"FIRST_PRICE":  0,
	"SECOND_PRICE": 1,
	"FIXED_PRICE":  2,
}

func (x AuctionType) String() string {
	return proto.EnumName(AuctionType_name, int32(x))
}

func (AuctionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_80e19dc549ac3013, []int{0}
}

type VarintMsg struct {
	ArgI32               int32       `protobuf:"varint,1,opt,name=argI32,proto3" json:"argI32,omitempty"`
	ArgI64               int64       `protobuf:"varint,2,opt,name=argI64,proto3" json:"argI64,omitempty"`
	ArgUI32              uint32      `protobuf:"varint,3,opt,name=argUI32,proto3" json:"argUI32,omitempty"`
	ArgUI64              uint64      `protobuf:"varint,4,opt,name=argUI64,proto3" json:"argUI64,omitempty"`
	ArgSI32              int32       `protobuf:"zigzag32,5,opt,name=argSI32,proto3" json:"argSI32,omitempty"`
	ArgSI64              int64       `protobuf:"zigzag64,6,opt,name=argSI64,proto3" json:"argSI64,omitempty"`
	ArgBool              []bool      `protobuf:"varint,7,rep,packed,name=argBool,proto3" json:"argBool,omitempty"`
	ArgEnum              AuctionType `protobuf:"varint,8,opt,name=argEnum,proto3,enum=pb.AuctionType" json:"argEnum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VarintMsg) Reset()         { *m = VarintMsg{} }
func (m *VarintMsg) String() string { return proto.CompactTextString(m) }
func (*VarintMsg) ProtoMessage()    {}
func (*VarintMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_80e19dc549ac3013, []int{0}
}

func (m *VarintMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VarintMsg.Unmarshal(m, b)
}
func (m *VarintMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VarintMsg.Marshal(b, m, deterministic)
}
func (m *VarintMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VarintMsg.Merge(m, src)
}
func (m *VarintMsg) XXX_Size() int {
	return xxx_messageInfo_VarintMsg.Size(m)
}
func (m *VarintMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_VarintMsg.DiscardUnknown(m)
}

var xxx_messageInfo_VarintMsg proto.InternalMessageInfo

func (m *VarintMsg) GetArgI32() int32 {
	if m != nil {
		return m.ArgI32
	}
	return 0
}

func (m *VarintMsg) GetArgI64() int64 {
	if m != nil {
		return m.ArgI64
	}
	return 0
}

func (m *VarintMsg) GetArgUI32() uint32 {
	if m != nil {
		return m.ArgUI32
	}
	return 0
}

func (m *VarintMsg) GetArgUI64() uint64 {
	if m != nil {
		return m.ArgUI64
	}
	return 0
}

func (m *VarintMsg) GetArgSI32() int32 {
	if m != nil {
		return m.ArgSI32
	}
	return 0
}

func (m *VarintMsg) GetArgSI64() int64 {
	if m != nil {
		return m.ArgSI64
	}
	return 0
}

func (m *VarintMsg) GetArgBool() []bool {
	if m != nil {
		return m.ArgBool
	}
	return nil
}

func (m *VarintMsg) GetArgEnum() AuctionType {
	if m != nil {
		return m.ArgEnum
	}
	return AuctionType_FIRST_PRICE
}

type Bit64 struct {
	ArgFixed64           uint64   `protobuf:"fixed64,1,opt,name=argFixed64,proto3" json:"argFixed64,omitempty"`
	ArgSFixed64          int64    `protobuf:"fixed64,2,opt,name=argSFixed64,proto3" json:"argSFixed64,omitempty"`
	ArgDouble            float64  `protobuf:"fixed64,3,opt,name=argDouble,proto3" json:"argDouble,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bit64) Reset()         { *m = Bit64{} }
func (m *Bit64) String() string { return proto.CompactTextString(m) }
func (*Bit64) ProtoMessage()    {}
func (*Bit64) Descriptor() ([]byte, []int) {
	return fileDescriptor_80e19dc549ac3013, []int{1}
}

func (m *Bit64) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bit64.Unmarshal(m, b)
}
func (m *Bit64) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bit64.Marshal(b, m, deterministic)
}
func (m *Bit64) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bit64.Merge(m, src)
}
func (m *Bit64) XXX_Size() int {
	return xxx_messageInfo_Bit64.Size(m)
}
func (m *Bit64) XXX_DiscardUnknown() {
	xxx_messageInfo_Bit64.DiscardUnknown(m)
}

var xxx_messageInfo_Bit64 proto.InternalMessageInfo

func (m *Bit64) GetArgFixed64() uint64 {
	if m != nil {
		return m.ArgFixed64
	}
	return 0
}

func (m *Bit64) GetArgSFixed64() int64 {
	if m != nil {
		return m.ArgSFixed64
	}
	return 0
}

func (m *Bit64) GetArgDouble() float64 {
	if m != nil {
		return m.ArgDouble
	}
	return 0
}

type Bit32 struct {
	ArgFixed32           uint32   `protobuf:"fixed32,1,opt,name=argFixed32,proto3" json:"argFixed32,omitempty"`
	ArgSFixed32          int32    `protobuf:"fixed32,2,opt,name=argSFixed32,proto3" json:"argSFixed32,omitempty"`
	ArgFloat             float32  `protobuf:"fixed32,3,opt,name=argFloat,proto3" json:"argFloat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bit32) Reset()         { *m = Bit32{} }
func (m *Bit32) String() string { return proto.CompactTextString(m) }
func (*Bit32) ProtoMessage()    {}
func (*Bit32) Descriptor() ([]byte, []int) {
	return fileDescriptor_80e19dc549ac3013, []int{2}
}

func (m *Bit32) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bit32.Unmarshal(m, b)
}
func (m *Bit32) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bit32.Marshal(b, m, deterministic)
}
func (m *Bit32) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bit32.Merge(m, src)
}
func (m *Bit32) XXX_Size() int {
	return xxx_messageInfo_Bit32.Size(m)
}
func (m *Bit32) XXX_DiscardUnknown() {
	xxx_messageInfo_Bit32.DiscardUnknown(m)
}

var xxx_messageInfo_Bit32 proto.InternalMessageInfo

func (m *Bit32) GetArgFixed32() uint32 {
	if m != nil {
		return m.ArgFixed32
	}
	return 0
}

func (m *Bit32) GetArgSFixed32() int32 {
	if m != nil {
		return m.ArgSFixed32
	}
	return 0
}

func (m *Bit32) GetArgFloat() float32 {
	if m != nil {
		return m.ArgFloat
	}
	return 0
}

type Repeat struct {
	ArgBoolList          []bool       `protobuf:"varint,1,rep,packed,name=argBoolList,proto3" json:"argBoolList,omitempty"`
	ArgI32List           []int32      `protobuf:"varint,2,rep,packed,name=argI32List,proto3" json:"argI32List,omitempty"`
	ArgUI32List          []uint32     `protobuf:"varint,3,rep,packed,name=argUI32List,proto3" json:"argUI32List,omitempty"`
	ArgSI32List          []int32      `protobuf:"zigzag32,4,rep,packed,name=argSI32List,proto3" json:"argSI32List,omitempty"`
	ArgStrList           []string     `protobuf:"bytes,5,rep,name=argStrList,proto3" json:"argStrList,omitempty"`
	ArgVarintMsg         []*VarintMsg `protobuf:"bytes,6,rep,name=argVarintMsg,proto3" json:"argVarintMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Repeat) Reset()         { *m = Repeat{} }
func (m *Repeat) String() string { return proto.CompactTextString(m) }
func (*Repeat) ProtoMessage()    {}
func (*Repeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_80e19dc549ac3013, []int{3}
}

func (m *Repeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repeat.Unmarshal(m, b)
}
func (m *Repeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repeat.Marshal(b, m, deterministic)
}
func (m *Repeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repeat.Merge(m, src)
}
func (m *Repeat) XXX_Size() int {
	return xxx_messageInfo_Repeat.Size(m)
}
func (m *Repeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Repeat.DiscardUnknown(m)
}

var xxx_messageInfo_Repeat proto.InternalMessageInfo

func (m *Repeat) GetArgBoolList() []bool {
	if m != nil {
		return m.ArgBoolList
	}
	return nil
}

func (m *Repeat) GetArgI32List() []int32 {
	if m != nil {
		return m.ArgI32List
	}
	return nil
}

func (m *Repeat) GetArgUI32List() []uint32 {
	if m != nil {
		return m.ArgUI32List
	}
	return nil
}

func (m *Repeat) GetArgSI32List() []int32 {
	if m != nil {
		return m.ArgSI32List
	}
	return nil
}

func (m *Repeat) GetArgStrList() []string {
	if m != nil {
		return m.ArgStrList
	}
	return nil
}

func (m *Repeat) GetArgVarintMsg() []*VarintMsg {
	if m != nil {
		return m.ArgVarintMsg
	}
	return nil
}

type LenPayload struct {
	ArgMap               map[string]int32 `protobuf:"bytes,1,rep,name=argMap,proto3" json:"argMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ArgStr               string           `protobuf:"bytes,2,opt,name=argStr,proto3" json:"argStr,omitempty"`
	ArgBytes             []byte           `protobuf:"bytes,3,opt,name=argBytes,proto3" json:"argBytes,omitempty"`
	ArgBit64             *Bit64           `protobuf:"bytes,4,opt,name=argBit64,proto3" json:"argBit64,omitempty"`
	ArgBit32             *Bit32           `protobuf:"bytes,5,opt,name=argBit32,proto3" json:"argBit32,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LenPayload) Reset()         { *m = LenPayload{} }
func (m *LenPayload) String() string { return proto.CompactTextString(m) }
func (*LenPayload) ProtoMessage()    {}
func (*LenPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_80e19dc549ac3013, []int{4}
}

func (m *LenPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LenPayload.Unmarshal(m, b)
}
func (m *LenPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LenPayload.Marshal(b, m, deterministic)
}
func (m *LenPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LenPayload.Merge(m, src)
}
func (m *LenPayload) XXX_Size() int {
	return xxx_messageInfo_LenPayload.Size(m)
}
func (m *LenPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_LenPayload.DiscardUnknown(m)
}

var xxx_messageInfo_LenPayload proto.InternalMessageInfo

func (m *LenPayload) GetArgMap() map[string]int32 {
	if m != nil {
		return m.ArgMap
	}
	return nil
}

func (m *LenPayload) GetArgStr() string {
	if m != nil {
		return m.ArgStr
	}
	return ""
}

func (m *LenPayload) GetArgBytes() []byte {
	if m != nil {
		return m.ArgBytes
	}
	return nil
}

func (m *LenPayload) GetArgBit64() *Bit64 {
	if m != nil {
		return m.ArgBit64
	}
	return nil
}

func (m *LenPayload) GetArgBit32() *Bit32 {
	if m != nil {
		return m.ArgBit32
	}
	return nil
}

func init() {
	proto.RegisterEnum("pb.AuctionType", AuctionType_name, AuctionType_value)
	proto.RegisterType((*VarintMsg)(nil), "pb.VarintMsg")
	proto.RegisterType((*Bit64)(nil), "pb.Bit64")
	proto.RegisterType((*Bit32)(nil), "pb.Bit32")
	proto.RegisterType((*Repeat)(nil), "pb.repeat")
	proto.RegisterType((*LenPayload)(nil), "pb.LenPayload")
	proto.RegisterMapType((map[string]int32)(nil), "pb.LenPayload.ArgMapEntry")
}

func init() { proto.RegisterFile("protocal.proto", fileDescriptor_80e19dc549ac3013) }

var fileDescriptor_80e19dc549ac3013 = []byte{
	// 526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x53, 0x5d, 0x6b, 0xdb, 0x30,
	0x14, 0x9d, 0xec, 0xd8, 0x89, 0xe5, 0xa4, 0x49, 0xc5, 0x18, 0x26, 0x8c, 0x21, 0x02, 0x03, 0x6d,
	0x0f, 0x81, 0xd9, 0x21, 0x6c, 0x7b, 0x4b, 0xda, 0x14, 0x02, 0xed, 0x56, 0x6e, 0xda, 0xb1, 0xb7,
	0xa1, 0xb4, 0xc6, 0x84, 0x79, 0xb1, 0x51, 0x94, 0xb1, 0xfc, 0xdc, 0xbd, 0xed, 0x4f, 0x0c, 0x8a,
	0x14, 0xc9, 0x51, 0xdf, 0x7c, 0x3e, 0xa4, 0xa3, 0x7b, 0x73, 0x82, 0xcf, 0x6a, 0x51, 0xc9, 0xea,
	0x81, 0x97, 0x63, 0xfd, 0x41, 0xbc, 0x7a, 0x3d, 0xfa, 0x87, 0x70, 0xf4, 0x8d, 0x8b, 0xcd, 0x56,
	0xde, 0xec, 0x0a, 0xf2, 0x0a, 0x87, 0x5c, 0x14, 0xcb, 0x2c, 0x4d, 0x10, 0x45, 0x2c, 0x00, 0x83,
	0x2c, 0x3f, 0x9d, 0x24, 0x1e, 0x45, 0xcc, 0x07, 0x83, 0x48, 0x82, 0xdb, 0x5c, 0x14, 0xf7, 0xea,
	0x80, 0x4f, 0x11, 0xeb, 0x81, 0x85, 0x8d, 0x32, 0x9d, 0x24, 0x2d, 0x8a, 0x58, 0x0b, 0x2c, 0x34,
	0xca, 0x4a, 0x9d, 0x09, 0x28, 0x62, 0xe7, 0x60, 0x61, 0xa3, 0x4c, 0x27, 0x49, 0x48, 0x11, 0x23,
	0x60, 0xa1, 0x51, 0xe6, 0x55, 0x55, 0x26, 0x6d, 0xea, 0xb3, 0x0e, 0x58, 0x48, 0xde, 0x69, 0x65,
	0xb1, 0xdd, 0xff, 0x4a, 0x3a, 0x14, 0xb1, 0xb3, 0xb4, 0x3f, 0xae, 0xd7, 0xe3, 0xd9, 0xfe, 0x41,
	0x6e, 0xaa, 0xed, 0xdd, 0xa1, 0xce, 0xc1, 0xea, 0xa3, 0x02, 0x07, 0xf3, 0x8d, 0x9c, 0x4e, 0xc8,
	0x1b, 0x8c, 0xb9, 0x28, 0xae, 0x36, 0x7f, 0xf2, 0xc7, 0xe9, 0x44, 0x4f, 0x1a, 0x82, 0xc3, 0x10,
	0x8a, 0x63, 0x15, 0x6c, 0x0d, 0x6a, 0xe4, 0x01, 0xb8, 0x14, 0x79, 0x8d, 0x23, 0x2e, 0x8a, 0xcb,
	0x6a, 0xbf, 0x2e, 0x73, 0x3d, 0x39, 0x82, 0x13, 0x31, 0xca, 0x75, 0x50, 0x96, 0xba, 0x41, 0x66,
	0xa5, 0x6d, 0x70, 0x98, 0x67, 0x41, 0x59, 0xaa, 0x83, 0xfa, 0xe0, 0x52, 0x64, 0x88, 0x3b, 0xca,
	0x5f, 0x56, 0x5c, 0xea, 0x1c, 0x0f, 0x1a, 0x3c, 0xfa, 0x8b, 0x70, 0x28, 0xf2, 0x3a, 0xe7, 0xd2,
	0x5c, 0xa4, 0x16, 0x72, 0xbd, 0xd9, 0xc9, 0x04, 0xe9, 0x1d, 0xb9, 0x94, 0x79, 0xca, 0x32, 0x4b,
	0xb5, 0xc1, 0xa3, 0x3e, 0x0b, 0xc0, 0x61, 0xcc, 0x0d, 0xf7, 0xd6, 0xe0, 0x53, 0x9f, 0xf5, 0xc0,
	0xa5, 0xec, 0x63, 0xad, 0xa3, 0x45, 0x7d, 0x76, 0x0e, 0x2e, 0x65, 0x32, 0x56, 0x52, 0x68, 0x43,
	0x40, 0x7d, 0x16, 0x81, 0xc3, 0x90, 0x0f, 0xb8, 0xcb, 0x45, 0xd1, 0xb4, 0x2d, 0x09, 0xa9, 0xcf,
	0xe2, 0xb4, 0xa7, 0x7e, 0xb0, 0x86, 0x84, 0x67, 0x96, 0xd1, 0x7f, 0x84, 0xf1, 0x75, 0xbe, 0xbd,
	0xe5, 0x87, 0xb2, 0xe2, 0x8f, 0x24, 0xd5, 0x3d, 0xbc, 0xe1, 0xb5, 0x1e, 0x31, 0x4e, 0x87, 0xea,
	0xec, 0x49, 0x1f, 0xcf, 0xb4, 0xb8, 0xd8, 0x4a, 0x71, 0x00, 0xe3, 0x34, 0xdd, 0x5d, 0x49, 0xa1,
	0xf7, 0x1b, 0x81, 0x41, 0x66, 0xb5, 0xf3, 0x83, 0xcc, 0x77, 0x7a, 0xb5, 0x5d, 0x68, 0x30, 0x79,
	0x7b, 0xd4, 0x54, 0x5b, 0x74, 0x7d, 0xe3, 0x34, 0x52, 0x49, 0x9a, 0x80, 0x46, 0x3a, 0xd9, 0x4c,
	0x97, 0x4f, 0xb6, 0x2c, 0x85, 0x46, 0x1a, 0x7e, 0xc2, 0xb1, 0xf3, 0x30, 0x32, 0xc0, 0xfe, 0xcf,
	0xfc, 0xa0, 0xeb, 0x10, 0x81, 0xfa, 0x24, 0x2f, 0x71, 0xf0, 0x9b, 0x97, 0xfb, 0x5c, 0xbf, 0x30,
	0x80, 0x23, 0xf8, 0xec, 0x7d, 0x44, 0xef, 0x67, 0x38, 0x76, 0xba, 0x4c, 0xfa, 0x38, 0xbe, 0x5a,
	0xc2, 0xea, 0xee, 0xc7, 0x2d, 0x2c, 0x2f, 0x16, 0x83, 0x17, 0x64, 0x80, 0xbb, 0xab, 0xc5, 0xc5,
	0xd7, 0x2f, 0x97, 0x86, 0x41, 0x47, 0xcb, 0xf7, 0x85, 0x25, 0xbc, 0x75, 0xa8, 0xff, 0xec, 0xd9,
	0x53, 0x00, 0x00, 0x00, 0xff, 0xff, 0x74, 0x7c, 0x06, 0x55, 0xfe, 0x03, 0x00, 0x00,
}
