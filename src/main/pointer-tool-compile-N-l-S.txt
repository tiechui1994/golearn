
	// 构建interface
	0x0021 00033 (pointer.go:17)	LEAQ	type."".Cat(SB), AX
	0x0028 00040 (pointer.go:17)	MOVQ	AX, (SP)
	0x002c 00044 (pointer.go:17)	PCDATA	$0, $0
	0x002c 00044 (pointer.go:17)	CALL	runtime.newobject(SB)        ;; SP+8=&Cat{}
	0x0031 00049 (pointer.go:17)	MOVQ	8(SP), DI                    ;; DI=&Cat{}
	0x0036 00054 (pointer.go:17)	MOVQ	DI, ""..autotmp_2+16(SP)     ;; DI=&StringHeader{}
	0x003b 00059 (pointer.go:17)	MOVQ	$8, 8(DI)                    ;; StringHeader(DI.Name).Len=8
	0x0043 00067 (pointer.go:17)	MOVL	runtime.writeBarrier(SB), AX
	0x0049 00073 (pointer.go:17)	TESTL	AX, AX
	0x004b 00075 (pointer.go:17)	JNE	150
	0x004d 00077 (pointer.go:17)	JMP	79
	0x004f 00079 (pointer.go:17)	LEAQ	go.string."grooming"(SB), AX ;; AX=&"grooming"
	0x0056 00086 (pointer.go:17)	MOVQ	AX, (DI)                     ;; StringHeader(DI.Name).Data=&"grooming"
	0x0059 00089 (pointer.go:17)	JMP	91
	0x005b 00091 (pointer.go:17)	MOVQ	""..autotmp_2+16(SP), AX     ;;
	0x0060 00096 (pointer.go:17)	MOVQ	AX, ""..autotmp_1+24(SP)
	0x0065 00101 (pointer.go:17)	LEAQ	go.itab.*"".Cat,"".Duck(SB), CX
	0x006c 00108 (pointer.go:17)	MOVQ	CX, "".c+32(SP)
	0x0071 00113 (pointer.go:17)	MOVQ	AX, "".c+40(SP)
	0x0076 00118 (pointer.go:18)	MOVQ	"".c+32(SP), AX
	0x007b 00123 (pointer.go:18)	TESTB	AL, (AX)


	0x007d 00125 (pointer.go:18)	MOVQ	"".c+40(SP), CX
	0x0082 00130 (pointer.go:18)	MOVQ	24(AX), AX
	0x0086 00134 (pointer.go:18)	MOVQ	CX, (SP)
	0x008a 00138 (pointer.go:18)	PCDATA	$0, $0
	0x008a 00138 (pointer.go:18)	CALL	AX
	0x008c 00140 (pointer.go:19)	MOVQ	48(SP), BP
	0x0091 00145 (pointer.go:19)	ADDQ	$56, SP
	0x0095 00149 (pointer.go:19)	RET
	0x0096 00150 (pointer.go:17)	LEAQ	go.string."grooming"(SB), AX
	0x009d 00157 (pointer.go:17)	CALL	runtime.gcWriteBarrier(SB)
	0x00a2 00162 (pointer.go:17)	JMP	91
	0x00a4 00164 (pointer.go:17)	NOP
	0x00a4 00164 (pointer.go:16)	PCDATA	$0, $-1
	0x00a4 00164 (pointer.go:16)	CALL	runtime.morestack_noctxt(SB)
	0x00a9 00169 (pointer.go:16)	JMP	0